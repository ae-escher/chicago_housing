categ_regr <- lm(loans_millions ~ redline_1930_value + tract_pop + med_family_income + avg_loan_amount + majority_race, data = for_regression)
summary(categ_regr)
?topcode.var
??topcode.var
?topcode.data
??topcode.data
install.packages("networkreporting")
library(networkreporting)
?topcode.var()
census_stats <- chicago_purchases %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(census_tract) %>%
summarise(loan_total = sum(loan_amount),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian)),
tract_pop = mean(as.numeric(tract_population)),
med_family_income = mean(as.numeric(tract_median_family_income)),
avg_loan_amount = mean(as.numeric(loan_amount))
) %>%
mutate(census_tract = as.character(census_tract),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total)) %>%
mutate(id = row_number())
head(census_stats, 3)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
topcode.var(loan_total, max = 535221000) # filtering out two outlier values for South Loop and Fulton Market neighborhoods
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
topcode.var(as.numeric(loan_total), max = 535221000) %>% # filtering out two outlier values for South Loop and Fulton Market neighborhoods
rename(redline_1930_value = INTERVAL2010) %>%
mutate(majority_race = as.factor(majority_race), relevel(majority_race, ref = "no_majority")) %>%
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
summary(census_stats)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
topcode.var(loan_total, max = 535221000) %>% # filtering out two outlier values for South Loop and Fulton Market neighborhoods
rename(redline_1930_value = INTERVAL2010) %>%
mutate(majority_race = as.factor(majority_race), relevel(majority_race, ref = "no_majority")) %>%
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(majority_race = as.factor(majority_race), relevel(majority_race, ref = "no_majority")) %>%
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
?topcode.data
topcode.var(loan_total, max = 535221000)
topcode.var(for_regression$loan_total, max = 535221000)
for_regression <- for_regression %>%
topcode.var(for_regression$loan_total, max = 535221000)
for_regression <- for_regression %>%
topcode.var(loan_total, max = 535221000)
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(majority_race = as.factor(majority_race), relevel(majority_race, ref = "no_majority")) %>%
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
for_regression$majority_race <- relevel(for_regression$majority_race, ref = "no_majority")
cont_regr <- lm(loans_millions ~ HRS2010 + tract_pop + med_family_income + avg_loan_amount + majority_race, data = for_regression)
summary(cont_regr)
categ_regr <- lm(loans_millions ~ redline_1930_value + tract_pop + med_family_income + avg_loan_amount + majority_race, data = for_regression)
summary(categ_regr)
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
table(for_regression$redline_1930_value)
table(for_regression$redline_1930_value)/nrow(for_regression)
table(for_regression$redline_1930_value) # number of census tracts in each of the four HOLC grades
table(for_regression$redline_1930_value)/nrow(for_regression) # proportion of tracts in that HOLC grade
for_regression <- for_regression %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
# creating new categorical variable on 1-4 grading scale for level of home mortgage lending
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(loan_total = ifelse(loan_total <= 535221000, loan_total, 535221000)) %>%
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(loan_total = ifelse(loan_total <= 535221000, loan_total, 535221000)) %>% # topcoding two outlier values of total loan amount for South Loop and Fulton Market neighborhoods
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
for_regression$majority_race <- relevel(for_regression$majority_race, ref = "no_majority")
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(majority_race = as.factor(majority_race), relevel(majority_race, ref = "no_majority")) %>%
mutate(loan_total = ifelse(loan_total <= 535221000, loan_total, 535221000)) %>% # top coding two upper  loan_total values for the South Loop and Fulton Market neighborhoods
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
for_regression$majority_race <- relevel(for_regression$majority_race, ref = "no_majority")
cont_regr <- lm(loans_millions ~ HRS2010 + tract_pop + med_family_income + avg_loan_amount + majority_race, data = for_regression)
summary(cont_regr)
categ_regr <- lm(loans_millions ~ redline_1930_value + tract_pop + med_family_income + avg_loan_amount + majority_race, data = for_regression)
summary(categ_regr)
table(for_regression$redline_1930_value) # number of census tracts in each of the four HOLC grades
table(for_regression$redline_1930_value)/nrow(for_regression) # proportion of tracts in that HOLC grade
for_regression <- for_regression %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
# creating new categorical variable on 1-4 grading scale for level of home mortgage lending
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
categorical_reg <- lm(ranking_2010 ~  value_2 + value_3 + value_4, data=for_regression)
summary(categorical_reg)
categorical_reg <- lm(ranking_2010 ~  value_3 + value_4, data=for_regression)
summary(categorical_reg)
regression1 <- lm(loan_total ~ HRS2010 + majority_race, data=for_regression)
summary(regression1)
ord_logit_reg <- polr(as.factor(ranking_2010) ~ redline_1930_value, data = for_regression, Hess = TRUE)
summary(ord_logit_reg)
cat_2 <- lm(value2 ~ HRS2010, data = for_regression)
cat_2 <- lm(value_2 ~ HRS2010, data = for_regression)
summary(cat_2)
cat_2 <- lm(value_2 ~ HRS2010, data = for_regression)
summary(cat_2)
cat_3 <- lm(value_3 ~ HRS2010, data = for_regression)
summary(cat_3)
cat_2 <- lm(value_2 ~ HRS2010, data = for_regression)
summary(cat_2)
cat_3 <- lm(value_3 ~ HRS2010, data = for_regression)
summary(cat_3)
cat_4 <- lm(value_4 ~ HRS2010, data = for_regression)
summary(cat_4)
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
summary(cat_2)
cat_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
summary(cat_3)
cat_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
summary(cat_4)
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
summary(cat_2)
cat_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
summary(cat_3)
cat_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
summary(cat_4)
cont_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
summary(cont_2)
cont_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
summary(cont_3)
cont_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
summary(cont_4)
View(zip_stats)
View(zip_stats_for_map)
View(chic_purchases_w_zip)
zip_stats <- chic_purchases_w_zip %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(zip) %>%
summarise(loan_total = sum(loan_amount),
averaage_redline_grade = average(HRS2010),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian))) %>%
mutate(zip = as.character(zip),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total))
zip_stats <- chic_purchases_w_zip %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(zip) %>%
summarise(loan_total = sum(loan_amount),
average_redline_grade = mean(HRS2010),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian))) %>%
mutate(zip = as.character(zip),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total))
head(zip_stats, 3)
table(for_regression$redline_1930_value) # number of census tracts in each of the four HOLC grades
table(for_regression$redline_1930_value)/nrow(for_regression) # proportion of tracts in that HOLC grade
for_regression <- for_regression %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
# creating new categorical variable on 1-4 grading scale for level of home mortgage lending
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
categorical_reg <- lm(ranking_2010 ~ value_3 + value_4, data=for_regression)
summary(categorical_reg)
categorical_reg <- lm(ranking_2010 ~ value_3 + value_4, data=for_regression)
summary(categorical_reg)
cont_reg <- lm(HRS2010 ~ value_3 + value_4, data=for_regression)
summary(cont_reg)
grade_categ_reg <- lm(ranking_2010 ~ value_3 + value_4, data=for_regression)
summary(categorical_reg)
grade_cont_reg <- lm(HRS2010 ~ value_3 + value_4, data=for_regression)
summary(cont_reg)
?stargazer
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
summary(cat_2)
cat_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
summary(cat_3)
cat_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
summary(cat_4)
cont_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
summary(cont_2)
cont_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
summary(cont_3)
cont_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
summary(cont_4)
rm(list = ls())
library(tidyverse)
library(stargazer)
library(readxl)
library(knitr)
library(lubridate)
library(dplyr)
library(devtools)
library(sf)
library(janitor)
library(MASS)
knitr::opts_chunk$set(echo = FALSE)
# WBEZ data portal
chicago_purchases <- read_excel("Chicago Purchase Orginations 2012-18_Public File.xlsx",
sheet = "Data",
col_types = "text")
# NRS
redlining_score <- read_excel("Historic Redlining Score 2010B.xlsx")
# Converting Census tracts to zipcodes for visualizations
census_to_zip <- read_excel("ZIP_TRACT_122018.xlsx") %>% mutate(GEOID10 = tract)
chi_redlining_score <- redlining_score %>% filter(METRO_NAME == "Chicago-Naperville-Elgin, IL-I")
chicago_purchases <- chicago_purchases %>%
clean_names() %>%
mutate(GEOID10 = census_tract) %>%
dplyr::select(-contains('denial'),
-contains('applicant'),
-parent_name_panel, -top_holder_name)
chicago_purchases <- chicago_purchases %>%
left_join(redlining_score, by = "GEOID10")
chic_purchases_w_zip <- chicago_purchases %>%
left_join(census_to_zip, by = "GEOID10") %>%
mutate(zip = as.character(zip))
View(chic_purchases_w_zip)
jpeg(file="zip_code_by_race.jpeg")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.background = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Chicago Zip Codes",
y = "Total Loans in Dollars",
fill = "Majority Race of Zip Code")
zip_stats <- chic_purchases_w_zip %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(zip) %>%
summarise(loan_total = sum(loan_amount),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian))) %>%
mutate(zip = as.character(zip),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total))
head(zip_stats, 3)
zip_stats_for_map <- zip_stats %>%
dplyr::select(zip, loan_total) %>%
rename(region = zip, value = loan_total) %>%
transform(region = as.numeric(region)) %>%
mutate(region = str_trim(region)) %>%
filter(region < 60666)
jpeg(file="zip_code.jpeg")
choroplethrZip::zip_choropleth(zip_stats_for_map,
zip_zoom = zip_stats_for_map$region,
title = "Home Mortgage Loans, 2012-2018",
legend = "Dollar Amounts"
)
dev.off()
jpeg(file="zip_code_by_race.jpeg")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.background = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Chicago Zip Codes",
y = "Total Loans in Dollars",
fill = "Majority Race of Zip Code")
dev.off()
jpeg(file="zip_code_by_race.jpeg")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.background = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Chicago Zip Codes",
y = "Total Loans in Dollars",
fill = "Majority Race of Zip Code")
dev.off()
jpeg(file="zip_code_by_race.jpeg")
zip_stats %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.background = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Chicago Zip Codes",
y = "Total Loans in Dollars",
fill = "Majority Race of Zip Code")
dev.off()
census_stats <- chicago_purchases %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(census_tract) %>%
summarise(loan_total = sum(loan_amount),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian)),
tract_pop = mean(as.numeric(tract_population)),
med_family_income = mean(as.numeric(tract_median_family_income)),
avg_loan_amount = mean(as.numeric(loan_amount))
) %>%
mutate(census_tract = as.character(census_tract),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total)) %>%
mutate(id = row_number())
head(census_stats, 3)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(majority_race = as.factor(majority_race), relevel(majority_race, ref = "no_majority")) %>%
mutate(loan_total = ifelse(loan_total <= 535221000, loan_total, 535221000)) %>% # top coding two upper  loan_total values for the South Loop and Fulton Market neighborhoods
mutate(loans_millions = loan_total/1000000) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
for_regression$majority_race <- relevel(for_regression$majority_race, ref = "no_majority")
ols_cont_reg <- lm(loans_millions ~ HRS2010 + tract_pop + med_family_income + avg_loan_amount + majority_race, data = for_regression)
summary(ols_cont_reg)
ols_categ_reg <- lm(loans_millions ~ redline_1930_value + tract_pop + med_family_income + avg_loan_amount + majority_race, data = for_regression)
summary(ols_categ_reg)
table(for_regression$redline_1930_value) # number of census tracts in each of the four HOLC grades
table(for_regression$redline_1930_value)/nrow(for_regression) # proportion of tracts in that HOLC grade
for_regression <- for_regression %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
# creating new categorical variable on 1-4 grading scale for level of home mortgage lending
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
grade_categ_reg <- lm(ranking_2010 ~ value_3 + value_4, data=for_regression)
summary(grade_categ_reg)
grade_cont_reg <- lm(HRS2010 ~ value_3 + value_4, data=for_regression)
summary(grade_cont_reg)
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
summary(cat_2)
cat_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
summary(cat_3)
cat_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
summary(cat_4)
cont_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
summary(cont_2)
cont_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
summary(cont_3)
cont_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
summary(cont_4)
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
coeftest(cat_2, vcov = vcovHC(cat_2, type="HC1"))
?coeftest
??coeftest\
??coestest
library(lmtest)
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
coeftest(cat_2, vcov = vcovHC(cat_2, type="HC1"))
?vcovHC
??vcovHC
library(sandwich)
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
coeftest(cat_2, vcov = vcovHC(cat_2, type="HC1"))
cat_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
coeftest(cat_3, vcov = vcovHC(cat_3, type="HC1"))
cat_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
coeftest(cat_4, vcov = vcovHC(cat_5, type="HC1"))
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
coeftest(cat_2, vcov = vcovHC(cat_2, type="HC1"))
cat_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
coeftest(cat_3, vcov = vcovHC(cat_3, type="HC1"))
cat_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
coeftest(cat_4, vcov = vcovHC(cat_4, type="HC1"))
cont_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
coeftest(cont_2, vcov = vcovHC(cont_2, type="HC1"))
cont_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
coeftest(cont_3, vcov = vcovHC(cont_3, type="HC1"))
cont_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
coeftest(cont_4, vcov = vcovHC(cont_4, type="HC1"))
??coeftest
cat_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
coeftest(cat_2, vcov = vcovHC(cat_2, type="HC1"))
cat_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
coeftest(cat_3, vcov = vcovHC(cat_3, type="HC1"))
cat_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
coeftest(cat_4, vcov = vcovHC(cat_4, type="HC1"))
cont_2 <- lm(value_2 ~ redline_1930_value, data = for_regression)
coeftest(cont_2, vcov = vcovHC(cont_2, type="HC1"))
cont_3 <- lm(value_3 ~ redline_1930_value, data = for_regression)
coeftest(cont_3, vcov = vcovHC(cont_3, type="HC1"))
cont_4 <- lm(value_4 ~ redline_1930_value, data = for_regression)
coeftest(cont_4, vcov = vcovHC(cont_4, type="HC1"))
??vcovHC
View(for_regression)
grade_categ_reg <- lm(ranking_2010 ~ value_3 + value_4, data=for_regression)
summary(grade_categ_reg)
grade_cont_reg <- lm(HRS2010 ~ HRS2010, data=for_regression)
summary(grade_cont_reg)
grade_categ_reg <- lm(ranking_2010 ~ value_3 + value_4, data=for_regression)
summary(grade_categ_reg)
grade_cont_reg <- lm(ranking_2010 ~ HRS2010, data=for_regression)
summary(grade_cont_reg)
?stargazer
ggplot(for_regression) + geom_point(aes(x = id, y = HRS2010))
ggplot(for_regression) + geom_point(aes(x = id, y = HRS2010)) + geom_line()
ggplot(for_regression) + geom_point(aes(x = id, y = HRS2010)) + geom_smooth()
ggplot(for_regression, aes(x = id, y = HRS2010)) + geom_point() + geom_smooth()
