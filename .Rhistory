chi_redlining_score <- redlining_score %>% filter(METRO_NAME == "Chicago-Naperville-Elgin, IL-I") %>% mutate(value = as.double("GEOID10"))
chi_redlining_score <- redlining_score %>% filter(METRO_NAME == "Chicago-Naperville-Elgin, IL-I") %>% mutate(value = "GEOID10")
summary(census_to_zip)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "value") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
census_stats <- census_stats %>%
mutate(value = "GEOID10")
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
census_stats <- census_stats %>%
mutate(value = "GEOID10")
census_stats <- chicago_purchases %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(census_tract) %>%
#     'Tract Majority Racial/Ethnic Group', 'Tract Population', 'Tract Median Family Income') %>%
summarise(value = sum(loan_amount)) %>%
arrange(desc(value))
colnames(census_stats) <- c("GEOID10", "value")
colnames(census_stats) <- c("region", "GEOID10")
quantile(census_stats$value, probs = 0.75, na.rm = TRUE)
quantile(census_stats$value, probs = 0.50, na.rm = TRUE)
quantile(census_stats$value, probs = 0.25, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(value >= 88162000, "high",
ifelse(value >= 32639000, "moderate-high",
ifelse(value >= 12331500, "moderate-low", "low"))))
quantile(census_stats$value, probs = 0.75, na.rm = TRUE)
quantile(census_stats$value, probs = 0.50, na.rm = TRUE)
quantile(census_stats$value, probs = 0.25, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(GEOID10 >= 88162000, "high",
ifelse(GEOID10 >= 32639000, "moderate-high",
ifelse(GEOID10 >= 12331500, "moderate-low", "low"))))
census_stats %>%
group_by(quartile) %>%
summarize(average = mean(GEOID10))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
census_stats <- census_stats %>% mutate(GEOID10 = as.character(GEOID10))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
nrow(for_regression)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
#filter(!is.na(INTERVAL2010)) %>%
#filter(!is.na(quartile))
nrow(for_regression)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10")
#filter(!is.na(INTERVAL2010)) %>%
#filter(!is.na(quartile))
nrow(for_regression)
regression1 <- lm(value ~ HRS2010, data=for_regression)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10")
#filter(!is.na(INTERVAL2010)) %>%
#filter(!is.na(quartile))
nrow(for_regression)
chi_redlining_score <- chi_redlining_score %>%
select(-value)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10")
#filter(!is.na(INTERVAL2010)) %>%
#filter(!is.na(quartile))
nrow(for_regression)
chi_redlining_score <- redlining_score %>% filter(METRO_NAME == "Chicago-Naperville-Elgin, IL-I") %>% mutate(value = "GEOID10")
chi_redlining_score <- redlining_score %>% filter(METRO_NAME == "Chicago-Naperville-Elgin, IL-I")
census_stats <- chicago_purchases %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(census_tract) %>%
#     'Tract Majority Racial/Ethnic Group', 'Tract Population', 'Tract Median Family Income') %>%
summarise(value = sum(loan_amount)) %>%
arrange(desc(value))
colnames(census_stats) <- c("GEOID10", "values")
census_stats <- census_stats %>%
mutate(quartile = ifelse(GEOID10 >= 88162000, "high",
ifelse(GEOID10 >= 32639000, "moderate-high",
ifelse(GEOID10 >= 12331500, "moderate-low", "low"))))
summary(census_stats)
summary(chi_redlining_score)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10")
#filter(!is.na(INTERVAL2010)) %>%
#filter(!is.na(quartile))
nrow(for_regression)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
nrow(for_regression)
regression1 <- lm(value ~ HRS2010, data=for_regression)
regression1 <- lm(values ~ HRS2010, data=for_regression)
summary(regression1)
regression2 <- polr(as.factor(quartile) ~ HRS2010, data = for_regression, Hess = TRUE)
regression1 <- lm(quartile ~ HRS2010, data=for_regression)
regression2 <- polr(as.factor(quartile) ~ HRS2010, data = for_regression, Hess = TRUE)
?polr
??polyr
??polr
library(Hmisc)
regression2 <- polr(as.factor(quartile) ~ HRS2010, data = for_regression, Hess = TRUE)
library(MASS)
regression2 <- polr(as.factor(quartile) ~ HRS2010, data = for_regression, Hess = TRUE)
ftable(xtabs(~ INTERVAL2010 + quartile, data = for_regression))
quantile(census_stats$value, probs = 0.75, na.rm = TRUE)
quantile(census_stats$value, probs = 0.50, na.rm = TRUE)
quantile(census_stats$value, probs = 0.25, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(GEOID10 >= 88162000, "high",
ifelse(GEOID10 >= 32639000, "moderate-high",
ifelse(GEOID10 >= 12331500, "moderate-low", "low"))))
census_stats %>%
group_by(quartile) %>%
summarize(average = mean(GEOID10))
quantile(census_stats$GEOID10, probs = 0.75, na.rm = TRUE)
quantile(census_stats$values, probs = 0.75, na.rm = TRUE)
quantile(census_stats$values, probs = 0.50, na.rm = TRUE)
quantile(census_stats$values, probs = 0.25, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(GEOID10 >= 88162000, "high",
ifelse(GEOID10 >= 32639000, "moderate-high",
ifelse(GEOID10 >= 12331500, "moderate-low", "low"))))
census_stats %>%
group_by(quartile) %>%
summarize(average = mean(GEOID10))
quantile(census_stats$values, probs = 0.75, na.rm = TRUE)
quantile(census_stats$values, probs = 0.50, na.rm = TRUE)
quantile(census_stats$values, probs = 0.25, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(values >= 88162000, "high",
ifelse(values >= 32639000, "moderate-high",
ifelse(values >= 12331500, "moderate-low", "low"))))
census_stats %>%
group_by(quartile) %>%
summarize(average = mean(GEOID10))
quantile(census_stats$values, probs = 0.75, na.rm = TRUE)
quantile(census_stats$values, probs = 0.50, na.rm = TRUE)
quantile(census_stats$values, probs = 0.25, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(values >= 88162000, "high",
ifelse(values >= 32639000, "moderate-high",
ifelse(values >= 12331500, "moderate-low", "low"))))
#census_stats %>%
#  group_by(quartile) %>%
#  summarize(average = mean(GEOID10))
census_stats <- census_stats %>% mutate(GEOID10 = as.character(GEOID10))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
nrow(for_regression)
ftable(xtabs(~ INTERVAL2010 + quartile, data = for_regression))
ftable(xtabs(~ INTERVAL2010, data = for_regression))
summary(for_regression$INTERVAL2010)
census_stats %>%
group_by(values) %>%
tally()
census_stats %>%
group_by(INTERVAL2010) %>%
tally()
for_regression %>%
group_by(INTERVAL2010) %>%
tally()
for_regression %>%
group_by(INTERVAL2010) %>%
tally()
prop.table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
quantile(census_stats$values, probs = 0.995, na.rm = TRUE)
quantile(census_stats$values, probs = 0.906, na.rm = TRUE)
quantile(census_stats$values, probs = 0.39, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(values >= 88162000, "high",
ifelse(values >= 32639000, "moderate-high",
ifelse(values >= 12331500, "moderate-low", "low"))))
#census_stats %>%
#  group_by(quartile) %>%
#  summarize(average = mean(GEOID10))
quantile(census_stats$values, probs = 0.995, na.rm = TRUE)
quantile(census_stats$values, probs = 0.906, na.rm = TRUE)
quantile(census_stats$values, probs = 0.39, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(quartile = ifelse(values >= 535717710, 1,
ifelse(values >= 193058420, 2,
ifelse(values >= 21695960, 3, 4))))
#census_stats %>%
#  group_by(quartile) %>%
#  summarize(average = mean(GEOID10))
quantile(census_stats$values, probs = 0.995, na.rm = TRUE)
quantile(census_stats$values, probs = 0.906, na.rm = TRUE)
quantile(census_stats$values, probs = 0.39, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(values >= 535717710, 1,
ifelse(values >= 193058420, 2,
ifelse(values >= 21695960, 3, 4))))
#census_stats %>%
#  group_by(quartile) %>%
#  summarize(average = mean(GEOID10))
census_stats <- census_stats %>% mutate(GEOID10 = as.character(GEOID10))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
nrow(for_regression)
ftable(xtabs(~ INTERVAL2010 + quartile, data = for_regression))
table(for_regression$ranking_2010)
quantile(census_stats$values, probs = 0.9945, na.rm = TRUE)
quantile(census_stats$values, probs = 0.9056, na.rm = TRUE)
quantile(census_stats$values, probs = 0.3908, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(values >= 535717710, 1,
ifelse(values >= 193058420, 2,
ifelse(values >= 21695960, 3, 4))))
#census_stats %>%
#  group_by(quartile) %>%
#  summarize(average = mean(GEOID10))
quantile(census_stats$values, probs = 0.9945, na.rm = TRUE)
quantile(census_stats$values, probs = 0.9056, na.rm = TRUE)
quantile(census_stats$values, probs = 0.3908, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(values >= 494773563, 1,
ifelse(values >= 192770992, 2,
ifelse(values >= 21788852, 3, 4))))
#census_stats %>%
#  group_by(quartile) %>%
#  summarize(average = mean(GEOID10))
table(for_regression$ranking_2010)
quantile(census_stats$values, probs = 0.9945, na.rm = TRUE)
quantile(census_stats$values, probs = 0.9056, na.rm = TRUE)
quantile(census_stats$values, probs = 0.39084, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(values >= 494773563, 1,
ifelse(values >= 192770992, 2,
ifelse(values >= 21788852, 3, 4))))
table(for_regression$ranking_2010)
census_stats <- census_stats %>% mutate(GEOID10 = as.character(GEOID10))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile))
nrow(for_regression)
ftable(xtabs(~ INTERVAL2010 + quartile, data = for_regression))
ftable(xtabs(~ INTERVAL2010 + ranking_2010, data = for_regression))
regression1 <- lm(ranking_2010 ~ INTERVAL2010, data=for_regression)
summary(regression1)
regression2 <- polr(as.factor(ranking_2010) ~ INTERVAL2010, data = for_regression, Hess = TRUE)
summary(regression2)
regression1 <- lm(ranking_2010 ~ INTERVAL2010, data=for_regression)
summary(regression1)
regression1 <- lm(ranking_2010 ~ INTERVAL2010 + values, data=for_regression)
summary(regression1)
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- data_frame(neighborhood, values)
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
chart_data %>%
ggplot(aes(values)) %>%
geom_bar()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
chart_data %>%
ggplot(aes(values)) +
geom_bar()
View(chart_data)
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
chart_data %>%
ggplot(aes(values)) +
geom_bar(stat = 'identity')
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
chart_data %>%
ggplot(aes(x = neighborhood, y = values)) +
geom_bar(stat = 'identity')
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = neighborhood, y = values)) +
geom_bar(stat = 'identity')
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values, color = blue)) +
geom_bar(stat = 'identity') + coord_flip()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values, color = "blue")) +
geom_bar(stat = 'identity') + coord_flip()
dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values), color = blue) +
geom_bar(stat = 'identity') + coord_flip()
dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values), color = "blue") +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values), color = blue) +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values, color = "blue")) +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values, color = blue)) +
geom_bar(stat = 'identity') + coord_flip()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip()
dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip() + labels(ylab = " ")
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
regression1 <- lm(ranking_2010 ~ INTERVAL2010, data=for_regression)
summary(regression1)
for_regression %>%
ggplot(aes(x = ranking_2010, y = INTERVAL2010)) +
geom_point()
for_regression %>%
ggplot(aes(x = ranking_2010, y = HRS2010)) +
geom_point()
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0))
nrow(for_regression)
?glm
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 <= 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
regression3 <- lm(ranking_2010 ~ value_2 + value_3 + value_4, data=for_regression)
summary(regression3)
regression3 <- lm(ranking_2010 ~ value_3 + value_4, data=for_regression)
summary(regression3)
regression3 <- lm(ranking_2010 ~ value_2, data=for_regression)
summary(regression3)
regression3 <- lm(ranking_2010 ~ value_3, data=for_regression)
summary(regression3)
regression3 <- lm(ranking_2010 ~ value_4, data=for_regression)
summary(regression3)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 == 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
regression3 <- lm(ranking_2010 ~ value_2 + value_3 + value_4, data=for_regression)
summary(regression3)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 <= 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
regression3 <- lm(ranking_2010 ~  value_3 + value_4, data=for_regression)
summary(regression3)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 == 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
regression3 <- lm(ranking_2010 ~  value_3 + value_4, data=for_regression)
summary(regression3)
regression3 <- lm(ranking_2010 ~  value_2 + value_3 + value_4, data=for_regression)
summary(regression3)
