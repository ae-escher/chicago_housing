coord_flip()
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = "GEOID10") %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 == 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
View(chi_redlining_score)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("GEOID10" = "census_tract")) %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 == 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>%
filter(!is.na(INTERVAL2010)) %>%
filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 == 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
quantile(census_stats$values, probs = 0.9945, na.rm = TRUE)
quantile(census_stats$values, probs = 0.9056, na.rm = TRUE)
quantile(census_stats$values, probs = 0.39084, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(values >= 494773563, 1,
ifelse(values >= 192770992, 2,
ifelse(values >= 21788852, 3, 4))))
ftable(xtabs(~ INTERVAL2010 + ranking_2010, data = for_regression))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>%
filter(!is.na(INTERVAL2010)) %>%
# filter(!is.na(quartile)) %>%
# mutate(new_column = ifelse(INTERVAL2010 >=3, 1, 0)) %>%
mutate(value_2 = ifelse(INTERVAL2010 == 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
View(for_regression)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>%
filter(!is.na(INTERVAL2010)) %>%
mutate(value_2 = ifelse(INTERVAL2010 <= 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
ftable(xtabs(~ INTERVAL2010 + ranking_2010, data = for_regression))
summary(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>%
filter(!is.na(INTERVAL2010)) %>%
mutate(value_2 = ifelse(INTERVAL2010 <= 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
ftable(xtabs(~ INTERVAL2010 + ranking_2010, data = for_regression))
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
quantile(census_stats$values, probs = 0.9945, na.rm = TRUE)
quantile(census_stats$values, probs = 0.9056, na.rm = TRUE)
quantile(census_stats$values, probs = 0.39084, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(values >= 494773563, 1,
ifelse(values >= 192770992, 2,
ifelse(values >= 21788852, 3, 4))))
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
quantile(census_stats$loan_total, probs = 0.9945, na.rm = TRUE)
quantile(census_stats$loan_total, probs = 0.9056, na.rm = TRUE)
quantile(census_stats$loan_total, probs = 0.39084, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= 494773563, 1,
ifelse(loan_total >= 192770992, 2,
ifelse(loan_total >= 21788852, 3, 4))))
table(for_regression$ranking_2010)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>%
filter(!is.na(INTERVAL2010)) %>%
mutate(value_2 = ifelse(INTERVAL2010 <= 2, 1, 0)) %>%
mutate(value_3 = ifelse(INTERVAL2010 == 3, 1, 0)) %>%
mutate(value_4 = ifelse(INTERVAL2010 == 4, 1, 0))
nrow(for_regression)
ftable(xtabs(~ INTERVAL2010 + ranking_2010, data = for_regression))
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
quantile(census_stats$loan_total, probs = 0.9945, na.rm = TRUE)
quantile(census_stats$loan_total, probs = 0.9056, na.rm = TRUE)
quantile(census_stats$loan_total, probs = 0.39084, na.rm = TRUE)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total, probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= 192770992, 2,
ifelse(loan_total >= 21788852, 3, 4))))
table(for_regression$ranking_2010)
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.39084, na.rm = TRUE), 3, 4))))
table(for_regression$ranking_2010)
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
table(for_regression$ranking_2010)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>%
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>%
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>%
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0))
nrow(for_regression)
ftable(xtabs(~ INTERVAL2010 + ranking_2010, data = for_regression))
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
for_regression %>%
ggplot(aes(x = ranking_2010, y = HRS2010)) +
geom_point()
regression1 <- lm(ranking_2010 ~ INTERVAL2010, data=for_regression)
regression1 <- lm(ranking_2010 ~ redline_1930_value, data=for_regression)
summary(regression1)
regression2 <- polr(as.factor(ranking_2010) ~ redline_1930_value, data = for_regression, Hess = TRUE)
summary(regression2)
neighborhood <- c("Near North Side", "Lake View", "Lincoln Park", "West Town", "All majority-Black neighborhoods")
values <- c(6206203, 6016469, 5258690, 5203987, 4643593)
chart_data <- tibble(neighborhood, values)
#jpeg(file="majority.jpeg")
chart_data %>%
arrange(desc(values)) %>%
ggplot(aes(x = reorder(neighborhood, values), y = values)) +
geom_bar(stat = 'identity') + coord_flip()
#dev.off()
regression3 <- lm(ranking_2010 ~  value_2 + value_3 + value_4, data=for_regression)
summary(regression3)
ord_logit_reg <- polr(as.factor(ranking_2010) ~ redline_1930_value, data = for_regression, Hess = TRUE)
summary(ord_logit_reg)
categorical_reg <- lm(ranking_2010 ~  value_2 + value_3 + value_4, data=for_regression)
summary(categorical_reg)
library(tidyverse)
library(stargazer)
library(readxl)
library(knitr)
library(lubridate)
library(dplyr)
library(devtools)
library(sf)
library(janitor)
library(MASS)
# WBEZ data portal
chicago_purchases <- read_excel("Chicago Purchase Orginations 2012-18_Public File.xlsx",
sheet = "Data",
col_types = "text")
# NRS
redlining_score <- read_excel("Historic Redlining Score 2010B.xlsx")
# Converting Census tracts to zipcodes for visualizations
census_to_zip <- read_excel("ZIP_TRACT_122018.xlsx") %>% mutate(GEOID10 = tract)
chi_redlining_score <- redlining_score %>% filter(METRO_NAME == "Chicago-Naperville-Elgin, IL-I")
chicago_purchases <- chicago_purchases %>%
clean_names() %>%
mutate(GEOID10 = census_tract) %>%
dplyr::select(-contains('denial'),
-contains('applicant'),
-parent_name_panel, -top_holder_name)
chicago_purchases <- chicago_purchases %>%
left_join(redlining_score, by = "GEOID10")
chic_purchases_w_zip <- chicago_purchases %>%
left_join(census_to_zip, by = "GEOID10") %>%
mutate(zip = as.character(zip))
zip_stats <- chic_purchases_w_zip %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(zip) %>%
summarise(loan_total = sum(loan_amount),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian))) %>%
mutate(zip = as.character(zip),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total))
head(zip_stats, 3)
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "blue"))  +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes") +
theme_bw()
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme_bw +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme_bw() +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.background = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.background = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
zip_stats_for_map <- zip_stats %>%
dplyr::select(zip, loan_total) %>%
rename(region = zip, value = loan_total) %>%
transform(region = as.numeric(region)) %>%
mutate(region = str_trim(region)) %>%
filter(region < 60666)
#jpeg(file="zip_code.jpeg")
choroplethrZip::zip_choropleth(zip_stats_for_map,
zip_zoom = zip_stats_for_map$region,
title = "Home Mortgage Loans, 2012-2018",
legend = "Dollar Amounts",
color = "blue"
)
?zip_choropleth
zip_stats_for_map <- zip_stats %>%
dplyr::select(zip, loan_total) %>%
rename(region = zip, value = loan_total) %>%
transform(region = as.numeric(region)) %>%
mutate(region = str_trim(region)) %>%
filter(region < 60666)
#jpeg(file="zip_code.jpeg")
choroplethrZip::zip_choropleth(zip_stats_for_map,
zip_zoom = zip_stats_for_map$region,
title = "Home Mortgage Loans, 2012-2018",
legend = "Dollar Amounts"
)
#dev.off()
jpeg(file="zip_code_by_race.jpeg")
zip_stats %>%
# tail(40) %>%
# arrange(desc(value)) %>%
ggplot(aes(x = reorder(zip, loan_total), y = loan_total, fill = majority_race)) +
geom_bar(stat = 'identity') +
scale_y_continuous(breaks = seq(0, 8000000000, by = 1800000000), labels = scales::comma) +
coord_flip() +
scale_fill_manual(values=c("aquamarine3", "brown3", "darkgoldenrod2", "darkblue"))  +
theme(panel.background = element_blank()) +
theme(axis.text.y=element_blank(), #remove x axis labels
axis.ticks.y=element_blank()) +
labs(title = "Total Mortgage Loans by Zip Code, 2012-2018",
x = "Total Loans in Dollars",
y = "Chicago Zip Codes")
dev.off()
categorical_reg <- lm(ranking_2010 ~  value_2 + value_3 + value_4, data=for_regression)
table(for_regression$INTERVAL2010)
census_stats <- chicago_purchases %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(census_tract) %>%
summarise(loan_total = sum(loan_amount),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian))) %>%
mutate(census_tract = as.character(census_tract),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total))
head(census_stats, 3)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
table(for_regression$INTERVAL2010)
table(for_regression$INTERVAL2010)/nrow(for_regression)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
table(for_regression$ranking_2010)
table(for_regression$redline_1930_value)
table(for_regression$redline_1930_value)/nrow(for_regression)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
table(for_regression$ranking_2010)
table(for_regression$redline_1930_value)
table(for_regression$redline_1930_value)/nrow(for_regression)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
View(for_regression)
table(for_regression$redline_1930_value)
ftable(xtabs(~ redline_1930_value + redline_1930_value, data = for_regression))
ftable(xtabs(~ redline_1930_value + redline_1930_value, data = for_regression))
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
table(for_regression$redline_1930_value)
table(for_regression$redline_1930_value)/nrow(for_regression)
census_stats <- census_stats %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
table(for_regression$redline_1930_value)
table(for_regression$redline_1930_value)/nrow(for_regression)
for_regression <- for_regression %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
categorical_reg <- lm(ranking_2010 ~  value_2 + value_3 + value_4, data=for_regression)
summary(categorical_reg)
regression1 <- lm(ranking_2010 ~ redline_1930_value, data=for_regression)
summary(regression1)
census_stats <- chicago_purchases %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(census_tract) %>%
summarise(loan_total = sum(loan_amount),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian))) %>%
mutate(census_tract = as.character(census_tract),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total))
head(census_stats, 3)
View(census_stats)
census_stats <- chicago_purchases %>%
mutate(loan_amount = as.numeric(loan_amount)) %>%
group_by(census_tract) %>%
summarise(loan_total = sum(loan_amount),
white_percent_avg = mean(as.numeric(tract_percent_population_white)),
black_percent_avg = mean(as.numeric(tract_percent_population_black)),
latino_percent_avg = mean(as.numeric(tract_percent_population_latino)),
asian_percent_avg = mean(as.numeric(tract_percent_population_asian))) %>%
mutate(census_tract = as.character(census_tract),
majority_race = ifelse(white_percent_avg >= 0.5, "white",
ifelse(black_percent_avg >= 0.5, "black",
ifelse(latino_percent_avg >= 0.5, "latino", "no_majority")))) %>%
arrange(desc(loan_total)) %>%
mutate(id = row_number())
head(census_stats, 3)
nrow(census_stats)
for_regression <- census_stats %>%
left_join(chi_redlining_score, by = c("census_tract" = "GEOID10")) %>% # adding redlining scores to census tract data
filter(!is.na(INTERVAL2010)) %>%
rename(redline_1930_value = INTERVAL2010) %>%
mutate(value_2 = ifelse(redline_1930_value <= 2, 1, 0)) %>% # creating binary variable for 1 or 2 HOLC grad
mutate(value_3 = ifelse(redline_1930_value == 3, 1, 0)) %>% # creating binary variable for 3 HOLC grad
mutate(value_4 = ifelse(redline_1930_value == 4, 1, 0)) # creating binary variable for 4 HOLC grad
nrow(for_regression) # number of rows after removing NAs
table(for_regression$redline_1930_value)
table(for_regression$redline_1930_value)/nrow(for_regression)
for_regression <- for_regression %>%
mutate(ranking_2010 = ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9945, na.rm = TRUE), 1,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.9056, na.rm = TRUE), 2,
ifelse(loan_total >= quantile(census_stats$loan_total,
probs = 0.3908, na.rm = TRUE), 3, 4))))
table(for_regression$ranking_2010)
ftable(xtabs(~ redline_1930_value + ranking_2010, data = for_regression))
regression1 <- lm(ranking_2010 ~ redline_1930_value, data=for_regression)
summary(regression1)
ord_logit_reg <- polr(as.factor(ranking_2010) ~ redline_1930_value, data = for_regression, Hess = TRUE)
summary(ord_logit_reg)
regression1 <- lm(id ~ HRS2010, data=for_regression)
summary(regression1)
regression1 <- lm(id ~ redline_1930_value, data=for_regression)
summary(regression1)
regression1 <- lm(loan_total ~ HRS2010, data=for_regression)
summary(regression1)
regression1 <- lm(loan_total ~ HRS2010 + majority_race, data=for_regression)
summary(regression1)
